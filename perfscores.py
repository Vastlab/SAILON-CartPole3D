import numpy as np
a = [0.655, 1.0, 0.05, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.775, 1.0, 1.0, 1.0, 0.145, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.22, 1.0, 1.0, 0.86, 0.315, 0.505, 0.785, 1.0, 0.905, 1.0, 1.0, 1.0, 1.0, 0.11, 0.245, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.09, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.555, 1.0, 1.0, 1.0, 1.0, 0.22, 1.0, 0.12, 1.0, 1.0, 0.16, 1.0, 0.59, 0.12, 0.56, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.035, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.915, 0.645, 1.0, 0.255, 1.0, 1.0, 1.0, 1.0, 0.945, 1.0, 1.0, 1.0, 1.0, 1.0, 0.955, 1.0, 1.0, 0.65, 0.885, 1.0, 1.0, 1.0, 1.0, 0.875, 1.0, 1.0, 1.0, 1.0, 1.0, 0.86, 0.265, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.94, 0.72, 1.0, 0.88, 1.0, 1.0, 1.0, 0.44, 0.21, 0.54, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.47, 1.0, 1.0, 0.68, 1.0, 1.0, 1.0, 0.215, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.195, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 1.0, 0.765, 0.295, 1.0, 1.0]

cumsum_vec = np.cumsum(np.insert(a,  0, 0))

scoreforKL=20

for window_width in range(11,15):
    smoothed = (cumsum_vec[window_width:] - cumsum_vec[:-window_width]) / window_width
    mylen=len(smoothed)
    offset = int(window_width/2)
    print()
    ssigma=0
    for rindex in range(0,mylen-scoreforKL-1):    
        pmu = np.mean(smoothed[rindex:rindex+scoreforKL])
        psigma = np.std(smoothed[rindex:rindex+scoreforKL])
        ssigma += psigma
        print ("Window", window_width, "rindex", rindex,  "mean std",  np.mean(smoothed), np.std(smoothed), "pmu/sig", pmu, psigma)
    print("Average sigmga", ssigma/(mylen-scoreforKL-1))

